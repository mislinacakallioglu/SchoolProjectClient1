@page "/login"

@using SchoolProjectClient.Client.Services.Users
@using SchoolProjectClient.Client.Model.User
@inject IUserService _userService;
@inject ISnackbar _snackbar;

<RadzenRow Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 800px; overflow: hidden;">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-text-align-center rz-p-12" Style="height: 100%; background: var(--rz-primary-light) no-repeat 100% 70% fixed url('your-background-image-url')">
            <RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white rz-mb-6">Welcome!</RadzenText>
            <RadzenText TextStyle="TextStyle.H6" Class="rz-color-white">Join the world's largest community!</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2" Class="rz-color-white">Let's get started with your <strong>30 days</strong> trial.</RadzenText>
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-p-12">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H2" Class="rz-mb-6">Login</RadzenText>
            <MudTextField T="string" @bind-Value="loginUser.Username" Label="username" FullWidth />
            <MudTextField T="string" @bind-Value="loginUser.Password" Label="Password" FullWidth />
            <MudButton Color="Color.Primary" OnClick="Login">LOGIN</MudButton>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {
    LoginRequest loginUser = new LoginRequest();

    async Task Login()
    {
        try
        {
            var result = await _userService.LoginUserAsync(loginUser);
            if (result.IsSucceeded)
            {
                _snackbar.Add("Login successful", Severity.Success);
                // Optionally navigate to another page or perform other actions on successful login
            }
            else
            {
                _snackbar.Add($"Login failed: {result.Message}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            _snackbar.Add($"Exception during login: {ex.Message}", Severity.Error);
        }
    }

}
